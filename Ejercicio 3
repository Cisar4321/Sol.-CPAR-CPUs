#Parte a
osboxes@osboxes:~/EssentialsOfParallelComputing$ cd Chapter6/

osboxes@osboxes:~/EssentialsOfParallelComputing/Chapter6$ ls

autovec                 docker_run.sh            mass_sum

autovec_function        dockervnc.sh             README.autovirtualbox

autovec_restrict        FindVector.cmake         README.docker

autovirtualbox.sh       GlobalSumsVectorized     README.md

COPYRIGHT               image                    README.virtualbox

dockerbash.sh           IntelBasekitPackageList  Setup.Ubuntu20.04

docker_cleanup.sh       IntelHPCkitPackageList   stencil

Dockerfile              LICENSE                  timestep

Dockerfile.Ubuntu20.04  License.txt

Dockerfile.vnc          Makefile





#Parte b
osboxes@osboxes:~/EssentialsOfParallelComputing/Chapter6$ cd autovec

osboxes@osboxes:~/EssentialsOfParallelComputing/Chapter6/autovec$ ls

CMakeLists.txt  stream_triad.c  timer.c  timer.h

osboxes@osboxes:~/EssentialsOfParallelComputing/Chapter6/autovec$ ls

CMakeLists.txt  stream_triad.c  timer.c  timer.h

osboxes@osboxes:~/EssentialsOfParallelComputing/Chapter6/autovec$ cd CMakeLists.txt

bash: cd: CMakeLists.txt: Not a directory

osboxes@osboxes:~/EssentialsOfParallelComputing/Chapter6/autovec$ nano CMakeLists.txt

osboxes@osboxes:~/EssentialsOfParallelComputing/Chapter6/autovec$ ls

CMakeLists.txt  stream_triad.c  timer.c  timer.h

osboxes@osboxes:~/EssentialsOfParallelComputing/Chapter6/autovec$ mkdir build

osboxes@osboxes:~/EssentialsOfParallelComputing/Chapter6/autovec$ ls

build  CMakeLists.txt  stream_triad.c  timer.c  timer.h

osboxes@osboxes:~/EssentialsOfParallelComputing/Chapter6/autovec$ cd build/

osboxes@osboxes:~/EssentialsOfParallelComputing/Chapter6/autovec/build$ ls

osboxes@osboxes:~/EssentialsOfParallelComputing/Chapter6/autovec/build$ cmake ..

-- The C compiler identification is GNU 11.4.0 -- Compilador de C, versión
-- The CXX compiler identification is GNU 11.4.0 -- Compilador de C++, versión
-- Detecting C complier ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /home/lvs/Desktop/EssentialsOfParallelComputing/Chapter6/autovec/build


-fstrict-aliasing: Habilita el control estricto de aliasing en el código.
-ftree-vectorize: Habilita la vectorización de bucles usando el árbol de sintaxis abstracta.
-march=native: Genera código para la arquitectura del procesador en el que se está compilando.
-mtune=native: Optimiza el código para la arquitectura del procesador en el que se está compilando.
-fopt-info-vec-optimized: Genera información sobre la vectorización optimizada.
-mprefer-vector-width=512 (condicional): Especifica el ancho preferido del vector como 512 bytes si la versión del compilador GCC es mayor que 7.4.0.



#Parte c
osboxes@osboxes:~/EssentialsOfParallelComputing/Chapter6/autovec/build$ nano CMakeLists.txT

-ftree-vectorize: Habilita la vectorización de bucles usando el árbol de sintaxis abstracta.
-fopt-info-vec-optimized: Genera información sobre la vectorización optimizada.


#Parte d
-mprefer-vector-width=512: 
-- Esta opción se especifica condicionalmente y establece el ancho preferido del vector como 512 bytes si la versión del compilador GCC es mayor que 7.4.0.
